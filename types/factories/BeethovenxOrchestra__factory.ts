/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BeethovenxOrchestra } from "../BeethovenxOrchestra";

export class BeethovenxOrchestra__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _fidelioDuettoBPT: string,
    overrides?: Overrides
  ): Promise<BeethovenxOrchestra> {
    return super.deploy(
      _fidelioDuettoBPT,
      overrides || {}
    ) as Promise<BeethovenxOrchestra>;
  }
  getDeployTransaction(
    _fidelioDuettoBPT: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_fidelioDuettoBPT, overrides || {});
  }
  attach(address: string): BeethovenxOrchestra {
    return super.attach(address) as BeethovenxOrchestra;
  }
  connect(signer: Signer): BeethovenxOrchestra__factory {
    return super.connect(signer) as BeethovenxOrchestra__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BeethovenxOrchestra {
    return new Contract(address, _abi, signerOrProvider) as BeethovenxOrchestra;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_fidelioDuettoBPT",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fidelioDuettoBPT",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shareOfFreshBeets",
        type: "uint256",
      },
    ],
    name: "leave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010c4380380620010c483398101604081905262000034916200016a565b604080518082018252600a8152694672657368426565747360b01b60208083019182528351808501909452600684526566424545545360d01b9084015281519192916200008491600391620000c4565b5080516200009a906004906020840190620000c4565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001d9565b828054620000d2906200019c565b90600052602060002090601f016020900481019282620000f6576000855562000141565b82601f106200011157805160ff191683800117855562000141565b8280016001018555821562000141579182015b828111156200014157825182559160200191906001019062000124565b506200014f92915062000153565b5090565b5b808211156200014f576000815560010162000154565b6000602082840312156200017d57600080fd5b81516001600160a01b03811681146200019557600080fd5b9392505050565b600181811c90821680620001b157607f821691505b60208210811415620001d357634e487b7160e01b600052602260045260246000fd5b50919050565b610edb80620001e96000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101e8578063a59f3e0c146101fb578063a9059cbb1461020e578063dd62ed3e1461022157600080fd5b806370a082311461018c5780637d01e6f8146101b557806395d89b41146101e057600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806367dfd4c91461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761025a565b6040516101049190610d8f565b60405180910390f35b61012061011b366004610d11565b6102ec565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610cd5565b610302565b60405160128152602001610104565b610120610172366004610d11565b6103b1565b61018a610185366004610d5d565b6103ed565b005b61013461019a366004610c80565b6001600160a01b031660009081526020819052604090205490565b6005546101c8906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6100f761052d565b6101206101f6366004610d11565b61053c565b61018a610209366004610d5d565b6105d5565b61012061021c366004610d11565b610738565b61013461022f366004610ca2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461026990610e54565b80601f016020809104026020016040519081016040528092919081815260200182805461029590610e54565b80156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b5050505050905090565b60006102f9338484610745565b50600192915050565b600061030f848484610869565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103995760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103a68533858403610745565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102f99185906103e8908690610de4565b610745565b801561052a576005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561043757600080fd5b505afa15801561044b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046f9190610d76565b9050600061047c60025490565b905060008161048b8486610e1e565b6104959190610dfc565b90506104a13385610a37565b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156104ed57600080fd5b505af1158015610501573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105259190610d3b565b505050505b50565b60606004805461026990610e54565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105be5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610390565b6105cb3385858403610745565b5060019392505050565b801561052a576005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561061f57600080fd5b505afa158015610633573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106579190610d76565b9050600061066460025490565b6005546040516323b872dd60e01b8152336004820152306024820152604481018690529192506001600160a01b0316906323b872dd90606401602060405180830381600087803b1580156106b757600080fd5b505af11580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ef9190610d3b565b508015806106fb575081155b1561070f5761070a3384610b85565b505050565b60008261071c8386610e1e565b6107269190610dfc565b90506107323382610b85565b50505050565b60006102f9338484610869565b6001600160a01b0383166107a75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610390565b6001600160a01b0382166108085760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610390565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166108cd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610390565b6001600160a01b03821661092f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610390565b6001600160a01b038316600090815260208190526040902054818110156109a75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610390565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109de908490610de4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a2a91815260200190565b60405180910390a3610732565b6001600160a01b038216610a975760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610390565b6001600160a01b03821660009081526020819052604090205481811015610b0b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610390565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b3a908490610e3d565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b038216610bdb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610390565b8060026000828254610bed9190610de4565b90915550506001600160a01b03821660009081526020819052604081208054839290610c1a908490610de4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b0381168114610c7b57600080fd5b919050565b600060208284031215610c9257600080fd5b610c9b82610c64565b9392505050565b60008060408385031215610cb557600080fd5b610cbe83610c64565b9150610ccc60208401610c64565b90509250929050565b600080600060608486031215610cea57600080fd5b610cf384610c64565b9250610d0160208501610c64565b9150604084013590509250925092565b60008060408385031215610d2457600080fd5b610d2d83610c64565b946020939093013593505050565b600060208284031215610d4d57600080fd5b81518015158114610c9b57600080fd5b600060208284031215610d6f57600080fd5b5035919050565b600060208284031215610d8857600080fd5b5051919050565b600060208083528351808285015260005b81811015610dbc57858101830151858201604001528201610da0565b81811115610dce576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610df757610df7610e8f565b500190565b600082610e1957634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610e3857610e38610e8f565b500290565b600082821015610e4f57610e4f610e8f565b500390565b600181811c90821680610e6857607f821691505b60208210811415610e8957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220596d83114691aced381e1f93129d5f62a4e682b9f859ac787c1539eba5c1dcd064736f6c63430008070033";
