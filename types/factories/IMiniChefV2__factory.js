"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
exports.__esModule = true;
exports.IMiniChefV2__factory = void 0;
var ethers_1 = require("ethers");
var IMiniChefV2__factory = /** @class */ (function () {
    function IMiniChefV2__factory() {
    }
    IMiniChefV2__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return IMiniChefV2__factory;
}());
exports.IMiniChefV2__factory = IMiniChefV2__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "pid",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
        ],
        name: "deposit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "pid",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
        ],
        name: "emergencyWithdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "pid",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
        ],
        name: "harvest",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "poolLength",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "pid",
                type: "uint256"
            },
        ],
        name: "updatePool",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "accSushiPerShare",
                        type: "uint128"
                    },
                    {
                        internalType: "uint64",
                        name: "lastRewardTime",
                        type: "uint64"
                    },
                    {
                        internalType: "uint64",
                        name: "allocPoint",
                        type: "uint64"
                    },
                ],
                internalType: "struct IMiniChefV2.PoolInfo",
                name: "",
                type: "tuple"
            },
        ],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pid",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "_user",
                type: "address"
            },
        ],
        name: "userInfo",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "pid",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
        ],
        name: "withdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "pid",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
        ],
        name: "withdrawAndHarvest",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
];
