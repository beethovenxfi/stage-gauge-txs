"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.MasterChefLpTokenTimelock__factory = void 0;
var contracts_1 = require("@ethersproject/contracts");
var MasterChefLpTokenTimelock__factory = /** @class */ (function (_super) {
    __extends(MasterChefLpTokenTimelock__factory, _super);
    function MasterChefLpTokenTimelock__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    MasterChefLpTokenTimelock__factory.prototype.deploy = function (token_, beneficiary_, releaseTime_, masterChef_, masterChefPoolId_, overrides) {
        return _super.prototype.deploy.call(this, token_, beneficiary_, releaseTime_, masterChef_, masterChefPoolId_, overrides || {});
    };
    MasterChefLpTokenTimelock__factory.prototype.getDeployTransaction = function (token_, beneficiary_, releaseTime_, masterChef_, masterChefPoolId_, overrides) {
        return _super.prototype.getDeployTransaction.call(this, token_, beneficiary_, releaseTime_, masterChef_, masterChefPoolId_, overrides || {});
    };
    MasterChefLpTokenTimelock__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    MasterChefLpTokenTimelock__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    MasterChefLpTokenTimelock__factory.connect = function (address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    };
    return MasterChefLpTokenTimelock__factory;
}(contracts_1.ContractFactory));
exports.MasterChefLpTokenTimelock__factory = MasterChefLpTokenTimelock__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "token_",
                type: "address"
            },
            {
                internalType: "address",
                name: "beneficiary_",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "releaseTime_",
                type: "uint256"
            },
            {
                internalType: "contract BeethovenxMasterChef",
                name: "masterChef_",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "masterChefPoolId_",
                type: "uint256"
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        inputs: [],
        name: "beneficiary",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256"
            },
        ],
        name: "depositAllToMasterChef",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "harvest",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "masterChefPoolId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "release",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "releaseTime",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "token",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
];
var _bytecode = "0x6101006040523480156200001257600080fd5b5060405162000eb938038062000eb9833981016040819052620000359162000202565b428311620000a55760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206260448201527165666f72652063757272656e742074696d6560701b60648201526084015b60405180910390fd5b6040516306ed78b760e21b8152600481018290526001600160a01b038087169190841690631bb5e2dc9060240160206040518083038186803b158015620000eb57600080fd5b505afa15801562000100573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001269190620001db565b6001600160a01b031614620001925760405162461bcd60e51b815260206004820152602b60248201527f50726f766964656420706f6f6c4964206e6f7420656c696769626c6520666f7260448201526a103a3434b9903a37b5b2b760a91b60648201526084016200009c565b606094851b6001600160601b03199081166080529390941b90921660a05260c052600080546001600160a01b0319166001600160a01b0390921691909117905560e05262000283565b600060208284031215620001ee57600080fd5b8151620001fb816200026a565b9392505050565b600080600080600060a086880312156200021b57600080fd5b855162000228816200026a565b60208701519095506200023b816200026a565b60408701516060880151919550935062000255816200026a565b80925050608086015190509295509295909350565b6001600160a01b03811681146200028057600080fd5b50565b60805160601c60a05160601c60c05160e051610b9d6200031c6000396000818160cd015281816101750152818161039a0152818161053901526105e2015260008181610118015261049701526000818160840152818161019601528181610604015261076301526000818161013e015281816102230152818161026b015281816103bc0152818161069101526107410152610b9d6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636e29a56b1161005b5780636e29a56b146100fb57806386d1a69f1461010e578063b91d400114610116578063fc0c546a1461013c57600080fd5b806338af3eed146100825780634641257d146100c15780636b4788a9146100cb575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100c9610162565b005b7f00000000000000000000000000000000000000000000000000000000000000005b6040519081526020016100b8565b6100c9610109366004610a96565b610216565b6100c9610495565b7f00000000000000000000000000000000000000000000000000000000000000006100ed565b7f00000000000000000000000000000000000000000000000000000000000000006100a4565b6000546001600160a01b03166318fccc767f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006040516001600160e01b031960e085901b16815260048101929092526001600160a01b03166024820152604401600060405180830381600087803b1580156101fc57600080fd5b505af1158015610210573d6000803e3d6000fd5b50505050565b61024b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308461078d565b6000546040516370a0823160e01b81523060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263095ea7b39291169083906370a082319060240160206040518083038186803b1580156102b957600080fd5b505afa1580156102cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f19190610aaf565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561033757600080fd5b505af115801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f9190610a74565b506000546040516370a0823160e01b81523060048201526001600160a01b0391821691638dbdbe6d917f0000000000000000000000000000000000000000000000000000000000000000917f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b1580156103fe57600080fd5b505afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104369190610aaf565b6040516001600160e01b031960e085901b16815260048101929092526024820152306044820152606401600060405180830381600087803b15801561047a57600080fd5b505af115801561048e573d6000803e3d6000fd5b5050505050565b7f00000000000000000000000000000000000000000000000000000000000000004210156105255760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527165666f72652072656c656173652074696d6560701b60648201526084015b60405180910390fd5b60008054604080516393f1a40b60e01b81527f00000000000000000000000000000000000000000000000000000000000000006004820152306024820152815184936001600160a01b0316926393f1a40b9260448082019391829003018186803b15801561059257600080fd5b505afa1580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca9190610ac8565b60005491935091506001600160a01b031663d1abb9077f0000000000000000000000000000000000000000000000000000000000000000847f00000000000000000000000000000000000000000000000000000000000000006040516001600160e01b031960e086901b168152600481019390935260248301919091526001600160a01b03166044820152606401600060405180830381600087803b15801561067257600080fd5b505af1158015610686573d6000803e3d6000fd5b5050505060006106b37f000000000000000000000000000000000000000000000000000000000000000090565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156106f457600080fd5b505afa158015610708573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072c9190610aaf565b90508015610788576107886001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836107f8565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526102109085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610828565b6040516001600160a01b03831660248201526044810182905261078890849063a9059cbb60e01b906064016107c1565b600061087d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108fa9092919063ffffffff16565b805190915015610788578080602001905181019061089b9190610a74565b6107885760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161051c565b60606109098484600085610913565b90505b9392505050565b6060824710156109745760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161051c565b843b6109c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161051c565b600080866001600160a01b031685876040516109de9190610aec565b60006040518083038185875af1925050503d8060008114610a1b576040519150601f19603f3d011682016040523d82523d6000602084013e610a20565b606091505b5091509150610a30828286610a3b565b979650505050505050565b60608315610a4a57508161090c565b825115610a5a5782518084602001fd5b8160405162461bcd60e51b815260040161051c9190610b08565b600060208284031215610a8657600080fd5b8151801515811461090c57600080fd5b600060208284031215610aa857600080fd5b5035919050565b600060208284031215610ac157600080fd5b5051919050565b60008060408385031215610adb57600080fd5b505080516020909101519092909150565b60008251610afe818460208701610b3b565b9190910192915050565b6020815260008251806020840152610b27816040850160208701610b3b565b601f01601f19169190910160400192915050565b60005b83811015610b56578181015183820152602001610b3e565b83811115610210575050600091015256fea2646970667358221220394e1583770e6f8acbbb484edd29778e09cddd5f945a2abd43d23f75a4bd476a64736f6c63430008070033";
