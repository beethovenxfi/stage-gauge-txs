/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { RewarderBrokenMock } from "../RewarderBrokenMock";

export class RewarderBrokenMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<RewarderBrokenMock> {
    return super.deploy(overrides || {}) as Promise<RewarderBrokenMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RewarderBrokenMock {
    return super.attach(address) as RewarderBrokenMock;
  }
  connect(signer: Signer): RewarderBrokenMock__factory {
    return super.connect(signer) as RewarderBrokenMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewarderBrokenMock {
    return new Contract(address, _abi, signerOrProvider) as RewarderBrokenMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "onBeetsReward",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pendingTokens",
    outputs: [
      {
        internalType: "contract IERC20[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061024b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063929bffc21461003b578063d63b3c4914610050575b600080fd5b61004e61004936600461010e565b61007a565b005b61006361005e36600461015c565b6100b6565b604051610071929190610191565b60405180910390f35b60405162461bcd60e51b815260206004820152600c60248201526b6d6f636b206661696c75726560a01b60448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152600c60248201526b6d6f636b206661696c75726560a01b604482015260609081906064016100ad565b80356001600160a01b038116811461010957600080fd5b919050565b600080600080600060a0868803121561012657600080fd5b85359450610136602087016100f2565b9350610144604087016100f2565b94979396509394606081013594506080013592915050565b60008060006060848603121561017157600080fd5b83359250610181602085016100f2565b9150604084013590509250925092565b604080825283519082018190526000906020906060840190828701845b828110156101d35781516001600160a01b0316845292840192908401906001016101ae565b5050508381038285015284518082528583019183019060005b81811015610208578351835292840192918401916001016101ec565b509097965050505050505056fea2646970667358221220a51ffb9a4d12ce158c3cbd680263c07c048fccb58e0a921e373fc40f88d6875b64736f6c63430008070033";
